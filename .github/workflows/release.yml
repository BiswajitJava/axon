name: Create Release and Build Binaries

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Trigger on tags like v0.1.0

jobs:
  build-native:
    name: Build Native Executable on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Maven
        run: mvn -B -Pnative -DskipTests native:compile
        env:
          FW_API_KEY: "dummy-key" # Set a dummy key for the build process

      - name: Prepare Binary for Upload
        shell: bash
        run: |
          OS_NAME=$(echo ${{ runner.os }} | cut -d'-' -f1) # Extracts 'ubuntu', 'macos', or 'windows'
          if [[ "${{ runner.os }}" == "windows-latest" ]]; then
            ARTIFACT_NAME="axon-cli-windows-amd64.exe"
            mv target/axon-cli.exe "target/${ARTIFACT_NAME}"
          else
            ARCH=$(uname -m | sed 's/x86_64/amd64/' | sed 's/aarch64/arm64/')
            ARTIFACT_NAME="axon-cli-${OS_NAME}-${ARCH}"
            mv target/axon-cli "target/${ARTIFACT_NAME}"
          fi
          echo "ARTIFACT_PATH=target/${ARTIFACT_NAME}" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_PATH }}
          path: ${{ env.ARTIFACT_PATH }}

  create-release:
    name: Create GitHub Release
    needs: build-native # This job runs only after all build-native jobs are done
    runs-on: ubuntu-latest

    permissions:
      contents: write # Required to create a release

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/ # Download all artifacts into this directory

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/* # Upload all files from the artifacts directory
          body: "Official release of the Axon CLI."
          draft: false
          prerelease: false